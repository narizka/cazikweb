<!DOCTYPE html>
<html>
<head>
    <title>Casino Slot Machine</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #1a1a2e;
            color: white;
            margin: 0;
            padding: 20px;
            overflow: hidden;
        }
        
        .slot-machine {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
        }
        
        .reel {
            display: flex;
            justify-content: space-around;
            background: #16213e;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .symbol {
            font-size: 40px;
            padding: 15px;
            transition: transform 0.3s;
        }
        
        .controls {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        button {
            background: #e94560;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        
        .balance {
            font-size: 20px;
            font-weight: bold;
            text-align: center;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="slot-machine">
        <div class="balance">üí∞ –ë–∞–ª–∞–Ω—Å: <span id="balance">100</span> –≥—Ä–Ω</div>
        
        <div class="reel" id="reel">
            <div class="symbol">üçí</div>
            <div class="symbol">üçã</div>
            <div class="symbol">üçä</div>
            <div class="symbol">üçá</div>
            <div class="symbol">7Ô∏è‚É£</div>
        </div>
        
        <div class="controls">
            <button id="spin-btn">üé∞ –ö—Ä—É—Ç–∏—Ç—å (1 –≥—Ä–Ω)</button>
            <button id="back-btn">üîô –ù–∞–∑–∞–¥ –≤ –±–æ—Ç</button>
        </div>
    </div>

    <script>
        const symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé', '7Ô∏è‚É£', '‚≠ê'];
        let balance = 100;
        let isSpinning = false;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        
        // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        const spinSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-slot-machine-spin-1930.mp3');
        const winSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-winning-chimes-2015.mp3');
        const loseSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-retro-arcade-lose-2027.mp3');
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏–∑ –±–æ—Ç–∞
        function updateBalance(change = 0) {
            balance += change;
            document.getElementById('balance').textContent = balance;
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ –±–æ—Ç
            fetch('/api/update_balance', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    user_id: Telegram.WebApp.initDataUnsafe.user?.id,
                    amount: change
                })
            });
        }
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        async function spin() {
            if (isSpinning || balance < 1) return;
            
            isSpinning = true;
            updateBalance(-1);
            spinSound.play();
            
            const reel = document.getElementById('reel');
            const symbols = reel.querySelectorAll('.symbol');
            const spinDuration = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
            const startTime = Date.now();
            const spinInterval = setInterval(() => {
                const elapsed = Date.now() - startTime;
                const progress = Math.min(elapsed / spinDuration, 1);
                
                symbols.forEach(sym => {
                    sym.textContent = symbols[Math.floor(Math.random() * symbols.length)];
                    sym.style.transform = `scale(${1 + 0.2 * Math.sin(progress * Math.PI * 10)})`;
                });
                
                if (progress === 1) {
                    clearInterval(spinInterval);
                    finishSpin();
                }
            }, 100);
        }
        
        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è
        function finishSpin() {
            isSpinning = false;
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            const reel = document.getElementById('reel');
            const result = generateResult();
            
            // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            const symbols = reel.querySelectorAll('.symbol');
            result.forEach((symbol, i) => {
                setTimeout(() => {
                    symbols[i].textContent = symbol;
                    symbols[i].style.transform = 'scale(1.3)';
                    setTimeout(() => symbols[i].style.transform = 'scale(1)', 200);
                }, i * 200);
            });
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
            setTimeout(() => {
                const winAmount = checkWin(result);
                if (winAmount > 0) {
                    winSound.play();
                    updateBalance(winAmount);
                    alert(`üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount} –≥—Ä–Ω!`);
                } else {
                    loseSound.play();
                }
            }, 1500);
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        function generateResult() {
            return [
                symbols[Math.floor(Math.random() * symbols.length)],
                symbols[Math.floor(Math.random() * symbols.length)],
                symbols[Math.floor(Math.random() * symbols.length)],
                symbols[Math.floor(Math.random() * symbols.length)],
                symbols[Math.floor(Math.random() * symbols.length)]
            ];
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
        function checkWin(result) {
            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 3 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
            if (result[0] === result[1] && result[1] === result[2]) {
                if (result[0] === '7Ô∏è‚É£') return 25;
                if (result[0] === 'üíé') return 15;
                if (result[0] === 'üîî') return 10;
                return 5;
            }
            return 0;
        }
        
        // –ö–Ω–æ–ø–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è
        document.getElementById('spin-btn').addEventListener('click', spin);
        
        // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –±–æ—Ç–∞
        document.getElementById('back-btn').addEventListener('click', () => {
            Telegram.WebApp.close();
        });
    </script>
</body>
</html>
